{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/mike/Projects/smart-search/frontend/ui/ProductSearch.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\n\ninterface SiteSelection {\n  reddit: boolean;\n  twitter: boolean;\n  discord: boolean;\n}\n\ninterface RetailerSelection {\n  amazon: boolean;\n  walmart: boolean;\n  bestBuy: boolean;\n}\n\nexport default function ProductSearch() {\n  const [productType, setProductType] = useState<string>(\"\");\n  const [minPrice, setMinPrice] = useState<string>(\"\");\n  const [maxPrice, setMaxPrice] = useState<string>(\"\");\n  const [selectedSites, setSelectedSites] = useState<SiteSelection>({\n    reddit: false,\n    twitter: false,\n    discord: false,\n  });\n  const [selectedRetailers, setSelectedRetailers] = useState<RetailerSelection>(\n    {\n      amazon: false,\n      walmart: false,\n      bestBuy: false,\n    }\n  );\n\n  const [searchResponse, setSearchResponse] = useState<any>(null); // State to hold the response\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const searchData = {\n      product_category: productType,\n      min_price: parseFloat(minPrice),\n      max_price: parseFloat(maxPrice),\n      sites: (Object.keys(selectedSites) as (keyof SiteSelection)[]).filter(\n        (site) => selectedSites[site]\n      ),\n      retailers: (\n        Object.keys(selectedRetailers) as (keyof RetailerSelection)[]\n      ).filter((retailer) => selectedRetailers[retailer]),\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(searchData),\n      });\n\n      if (!response.ok) throw new Error(\"Search Failed\");\n      const data = await response.json();\n      console.log(\"Check this here data:\", data);\n      setSearchResponse(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleSiteChange =\n    (site: keyof SiteSelection) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedSites((prev) => ({ ...prev, [site]: e.target.checked }));\n    };\n\n  const handleRetailerChange =\n    (retailer: keyof RetailerSelection) =>\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedRetailers((prev) => ({\n        ...prev,\n        [retailer]: e.target.checked,\n      }));\n    };\n\n  return (\n    <div>\n      <form\n        onSubmit={handleSubmit}\n        className=\"d-flex flex-column justify-content-center align-items-center text-start\"\n      >\n        <div className=\"mb-2 w-100\" style={{ maxWidth: \"300px\" }}>\n          <label htmlFor=\"productType\" className=\"form-label\">\n            Product Category\n          </label>\n          <input\n            className=\"form-control\"\n            id=\"productType\"\n            placeholder=\"Enter a product category\"\n            value={productType}\n            onChange={(e) => setProductType(e.target.value)}\n          />\n        </div>\n\n        <div className=\"mb-2 w-100\" style={{ maxWidth: \"300px\" }}>\n          <label htmlFor=\"minPrice\" className=\"form-label\">\n            Price Range\n          </label>\n          <div className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              placeholder=\"Min price\"\n              value={minPrice}\n              onChange={(e) => setMinPrice(e.target.value)}\n            />\n            <input\n              className=\"form-control\"\n              placeholder=\"Max price\"\n              value={maxPrice}\n              onChange={(e) => setMaxPrice(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"mb-2 w-100\" style={{ maxWidth: \"300px\" }}>\n          <label htmlFor=\"sitesToSearch\" className=\"form-label\">\n            Sites to search\n          </label>\n          <div className=\"d-flex justify-content-between\">\n            {[\"reddit\", \"twitter\", \"discord\"].map((site) => (\n              <div key={site}>\n                <input\n                  type=\"checkbox\"\n                  className=\"btn-check\"\n                  id={site}\n                  checked={selectedSites[site as keyof SiteSelection]}\n                  onChange={handleSiteChange(site as keyof SiteSelection)}\n                />\n                <label className=\"btn btn-outline-primary\" htmlFor={site}>\n                  {site}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mb-2 w-100\" style={{ maxWidth: \"300px\" }}>\n          <label htmlFor=\"retailers\" className=\"form-label\">\n            Pick a retailer\n          </label>\n          <div className=\"d-flex justify-content-between\">\n            {[\"amazon\", \"walmart\", \"bestBuy\"].map((retailer) => (\n              <div key={retailer}>\n                <input\n                  type=\"checkbox\"\n                  className=\"btn-check\"\n                  id={retailer}\n                  checked={\n                    selectedRetailers[retailer as keyof RetailerSelection]\n                  }\n                  onChange={handleRetailerChange(\n                    retailer as keyof RetailerSelection\n                  )}\n                />\n                <label\n                  className=\"btn btn-outline-primary text-capitalize\"\n                  htmlFor={retailer}\n                >\n                  {retailer.replace(\"bestBuy\", \"Best Buy\")}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mb-2 w-100\" style={{ maxWidth: \"300px\" }}>\n          <button className=\"btn btn-outline-success w-100\" type=\"submit\">\n            Search\n          </button>\n        </div>\n      </form>\n\n      {searchResponse && (\n        <div>\n          <h2>Search Results:</h2>\n          <pre>{JSON.stringify(searchResponse, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///home/mike/Projects/smart-search/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}